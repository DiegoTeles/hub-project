services:
  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: .
      # Only will build development stage from our dockerfile
      target: development
    env_file:
        - .env
    environment:
      DATABASE_URL_DEV: postgresql://${DB_USER_DEV}:${DB_PASS_DEV}@postgres:5432/${DB_NAME_DEV}?schema=public
    volumes:
      - .:/usr/src/app
    # Run in dev Mode: npm run start:dev
    command: npm run start:dev
    ports:
      - 3001:3001
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME_DEV}
      POSTGRES_USER: ${DB_USER_DEV}
      POSTGRES_PASSWORD: ${DB_PASS_DEV}
    ports: 
      - '5432:5432'
    volumes:
      - docker-postgres:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin
    image: "dpage/pgadmin4:6.10"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@mail.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
      - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - "5433:80"
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'postgres:5432:*:postgres:password' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
    restart: unless-stopped

volumes:
  docker-postgres:
  pgadmin: